# Generated by Django 5.2.3 on 2025-06-27 19:37

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('OBSP', '0001_initial'),
        ('core', '0001_initial'),
        ('financeapp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('start', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FreelancerActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('bid_submitted', 'Bid Submitted'), ('project_awarded', 'Project Awarded'), ('project_started', 'Project Started'), ('milestone_completed', 'Milestone Completed'), ('project_completed', 'Project Completed'), ('project_feedback', 'Project Feedback Received'), ('project_rejected', 'Project Rejected'), ('client_message', 'Client Message Received'), ('payment_received', 'Payment Received'), ('payment_pending', 'Payment Pending'), ('payment_disputed', 'Payment Disputed'), ('payment_released', 'Payment Released'), ('invoice_sent', 'Invoice Sent'), ('invoice_paid', 'Invoice Paid'), ('withdrawal_initiated', 'Withdrawal Initiated'), ('withdrawal_completed', 'Withdrawal Completed'), ('profile_updated', 'Profile Updated'), ('skill_added', 'Skill Added'), ('portfolio_updated', 'Portfolio Updated'), ('certification_added', 'Certification Added'), ('verification_completed', 'Verification Completed'), ('rating_received', 'Rating Received'), ('login', 'User Logged In'), ('login_failed', 'Login Failed'), ('account_security', 'Account Security Alert'), ('preferences_updated', 'Preferences Updated')], max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('detailed_description', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('related_model', models.CharField(blank=True, max_length=100, null=True)),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('visibility', models.CharField(choices=[('private', 'Private - Only Me'), ('clients', 'Clients - Visible to Current Clients'), ('public', 'Public - Visible on Profile')], default='private', max_length=10)),
                ('changes_detail', models.JSONField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('action_required', models.BooleanField(default=False)),
                ('action_taken', models.BooleanField(default=False)),
                ('action_deadline', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('email_sent', models.BooleanField(default=False)),
                ('push_notification_sent', models.BooleanField(default=False)),
                ('in_app_notification_sent', models.BooleanField(default=False)),
                ('bid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='core.bid')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='client_activities_with_freelancer', to=settings.AUTH_USER_MODEL)),
                ('freelancer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='freelancer_activities', to=settings.AUTH_USER_MODEL)),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='financeapp.paymentmethod')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.project')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.task')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='financeapp.transaction')),
            ],
            options={
                'verbose_name': 'Freelancer Activity',
                'verbose_name_plural': 'Freelancer Activities',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['freelancer', 'timestamp'], name='freelancer__freelan_2f32b5_idx'), models.Index(fields=['activity_type'], name='freelancer__activit_5176cb_idx'), models.Index(fields=['is_read'], name='freelancer__is_read_7f8bc4_idx'), models.Index(fields=['action_required'], name='freelancer__action__bb410a_idx')],
            },
        ),
        migrations.CreateModel(
            name='FreelancerEligibilityCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_eligible_obsp', models.IntegerField(default=0)),
                ('total_obsp_checked', models.IntegerField(default=0)),
                ('average_score', models.FloatField(default=0)),
                ('level_breakdown', models.JSONField(default=dict)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('cache_version', models.CharField(default='1.0', max_length=20)),
                ('freelancer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eligibility_cache', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['total_eligible_obsp', 'average_score'], name='freelancer__total_e_ba514c_idx'), models.Index(fields=['last_calculated'], name='freelancer__last_ca_481be7_idx')],
                'unique_together': {('freelancer',)},
            },
        ),
        migrations.CreateModel(
            name='FreelancerOBSPEligibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eligibility_data', models.JSONField(default=dict, help_text='Stores eligibility for all levels')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('calculation_version', models.CharField(default='1.0', max_length=20)),
                ('freelancer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='obsp_eligibility', to=settings.AUTH_USER_MODEL)),
                ('obsp_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='OBSP.obsptemplate')),
            ],
            options={
                'ordering': ['-last_updated'],
                'indexes': [models.Index(fields=['freelancer', 'obsp_template'], name='freelancer__freelan_fda34f_idx'), models.Index(fields=['last_updated'], name='freelancer__last_up_08954f_idx')],
                'unique_together': {('freelancer', 'obsp_template')},
            },
        ),
    ]
